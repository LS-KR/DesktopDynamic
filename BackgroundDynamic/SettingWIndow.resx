<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>